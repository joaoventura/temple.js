{"name":"Temple.js","tagline":"Template compiler","body":"Temple.js\r\n=========\r\n\r\nTemple.js is a small javascript browser library for compiling templates to functions.\r\nIt is intended to be used on development. When you are ready for production, compile your templates to a javascript file, and use them the same way.\r\n\r\n\r\n## Development - Usage\r\n\r\nDefine your templates directly in your html code, or on an external file:\r\n\r\n```html\r\n<script id='my-templates' type='text/template'>\r\n\r\n    <template name='message' arg='name'>\r\n        <li>Hello {{=name}}</li>\r\n    </template>\r\n\r\n    <template name='greet' arg='names'>\r\n        <ul>\r\n        {{for (var i=0; i<names.length; i++) { }}\r\n            {{=this.message(names[i])}}\r\n        {{ } }}\r\n        </ul>\r\n    </template>\r\n\r\n</script>\r\n\r\n```\r\n\r\nCompile your templates to javascript functions and invoke them directly:\r\n\r\n```javascript\r\nvar templates = temple.fromID('my-templates');\r\ntemplates.greet(['Andrew', 'Betty', 'Charles']);\r\n```\r\n\r\n```html\r\n<ul>\r\n    <li>Hello Andrew</li>\r\n    <li>Hello Betty</li>\r\n    <li>Hello Charles</li>\r\n</ul>\r\n\r\n```\r\n\r\n\r\n## Production - Generate javascript source\r\n\r\nWhen you are ready for production, generate the javascript source code:\r\n\r\n```javascript\r\ntemple.stringFromID('my-templates');\r\n```\r\n\r\n```javascript\r\nvar templates = {};\r\n\r\ntemplates.message = function (name) {\r\n    var out = '<li>Hello ' + (name) + '</li>';\r\n    return out;\r\n};\r\n\r\ntemplates.greet = function (names) {\r\n    var out = '<ul>';\r\n    for (var i = 0; i < names.length; i++) {\r\n        out += (this.message(names[i]));\r\n    }\r\n    out += '</ul>';\r\n    return out;\r\n};\r\n\r\n```\r\n\r\nCopy-paste it to a javascript file (e.g. 'templates.js'), and use its functions like in any other javascript file.\r\n\r\n```html\r\n<script src='templates.js'></script>\r\n<script>\r\n    templates.greet(['Andrew', 'Betty', 'Charles']);\r\n</script>\r\n```\r\n\r\nYou can also use the generator at site/index.html to compile your templates to javascript source code.\r\n\r\n\r\n## Documentation\r\n\r\n### Templates\r\n\r\nA template is defined as a string between a <template> tag and includes two attributes - the template name and the template argument. Current version only accepts one argument per template.\r\n\r\n```html\r\n<template name='message' arg='name'>\r\n    <li>Hello {{=name}}</li>\r\n</template>\r\n```\r\n\r\nThe previous template gets compiled to the following javascript function:\r\n\r\n```javascript\r\nfunction message(name) {\r\n    var out = '<li>Hello ' + (name) + '</li>';\r\n    return out;\r\n};\r\n```\r\n\r\n### Functions\r\n\r\nBesides templates, you can also define functions that can be useful, for instance, for defining presentation logic.\r\nThe main difference between functions and templates, is that the content of functions must be pure javascript code. But, similarly to templates, functions must have a name and an argument.\r\n\r\n```html\r\n<function name='beautify' arg='someone'>\r\n    return \"Hi\" + someone + \" you are beautiful!\";\r\n</function>\r\n```\r\n\r\nis compiled to:\r\n\r\n```javascript\r\nfunction beautify(someone) {\r\n    return \"Hi\" + someone + \" you are beautiful!\";\r\n};\r\n```\r\n\r\nBasically, temple.js returns the contents of functions as they are defined.\r\n\r\n\r\n### Template locations\r\n\r\nYou can define one or more templates inside the html document (for instance, inside a script element with the text attribute to something other than 'text/javascript'), or on an external file.\r\n\r\nFor external files, use *fromURL(url, callback)* to load the external file asynchronously. Check [this file with several templates and functions](https://github.com/joaoventura/temple.js/blob/master/site/templates.html) for an example.\r\n\r\n\r\n### Temple.js functions\r\n\r\n* fromID(id): Loads templates from an element and returns them as compiled javascript functions ready for use.\r\n\r\n* fromURL(url, callback): Loads templates from an external file and returns them as compiled javascript functions ready for use.\r\n\r\n* stringFromID(ID): Loads templates from an element and returns them as javascript source code to be used on production.\r\n\r\n* stringFromURL(url, callback): Loads templates from an external file and returns them as javascript source code to be used on production.\r\n\r\n* build(string): Parses a string with templates and returns compiled javascript.\r\n\r\n* buildString(string): Parses a string with templates and returns javascript source code.\r\n\r\n\r\n\r\n\r\n## Github page\r\n\r\nhttp://joaoventura.github.io/temple.js/\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}